#! /bin/bash

# Uses environment variable CONTACTSPATH

# ----------------------------------------
# Constants
# ----------------------------------------
readonly origIFS=$IFS
readonly progVer="7.0"
readonly progName=$(basename $0)
readonly uninitialized="UNINITIALIZED"
readonly allRecords="FALSE"

# ----------------------------------------
# Globals
# ----------------------------------------
debug="TRUE"
debug="FALSE"
recordCount=0


# ----------------------------------------
# Libraries
# ----------------------------------------
libList="${HOME}/bin/lib/dashline"

for i in $libList; do
    if [[ -r $i ]]; then    # Does it exist?
        . $i                # Source the library file.
    else
        printf "%s\n" "ERROR: Library file not found. Could not source library file."
        printf "%s\n" "File: $i"
        exit
    fi
done


# ----------------------------------------
# Startup
# ----------------------------------------
if [ "$debug" == "TRUE" ]; then
    printf "%s\n" "
** ==================== Startup
** 0 ........................ .$0.
** 1 ........................ .$1.
** \$* ....................... .$*.
** progName ................. .$progName.
** File search list ......... .$fileSearchList."
fi


# ----------------------------------------
  function Initialize () {
# ----------------------------------------
    # Check to assure the search path environment variable is set.
    # If not set, then exit
    if [[  -z ${CONTACTSPATH:-} ]]; then
        printf "%s\n" "\
ERROR: Environment variable not set. 
       The CONTACTSPATH variable must contain a list of files.
"
       exit 1
    fi
}   #function


# ----------------------------------------
  function ProgUsage () {
# ----------------------------------------
  printf "%s\n"  "
Syntax:
$progName search_name [ file_name  ]
  contact -h

Where
  search_name is a string used for the search
  file_name is a file to search.

Defaults
  A file list is stored in the environment variable \$CONTACTSPATH
"

}	# function
# ----------------------------------------
  function PrintVer () {
# ----------------------------------------
    printf "%s\n" "
ver. $progVer
"
}	# function


# ----------------------------------------
  function SearchFile () {
# ----------------------------------------
# Parameters
local fileName=$1
local stringToFind=$2

local fileBaseName=$(basename $fileName)

    if [[ "$debug" == "TRUE" ]]; then
        printf "%s\n" "\
**** ==================== function: $FUNCNAME
  ** fileName ............ .${fileName}.
  ** fileBaseName ........ .${fileBaseName}.
  ** stringToFind ........ .${stringToFind}."
    fi

grep "CONREC::" ${fileName} | grep -i ${stringToFind} | \
    while read recordType junk recordVer junk recordDate junk firstStr junk lastStr junk emailStr junk phoneStr junk orgStr junk roleStr junk remainingStr
    do
        recordCount=$((recordCount+1))  # Increment recordCount

        # There is a field order change between conrec ver 3.0 and 4.0
        # The recordVer and recordDate order was reveresed.
        # If recordDate = "3.0", then it is a conrec ver 3.0 format, so let's
        # swith the values in those 2 fields.
        if [ "$recordDate" == "3.0" ]; then
            recordDate=${recordVer}
            recordVer="3.0"
        fi

        if [ "$debug" == "TRUE" ]; then
            printf "%s\n" "\
  ** recordcount ......... $recordCount
  ** recordType .......... $recordType
  ** recordVer ........... $recordVer
  ** recordDate .......... $recordDate
  ** firstStr ............ $firstStr
  ** lastStr ............. $lastStr
  ** emailStr ............ $emailStr
  ** phontStr ............ $phoneStr
  ** orgStr .............. $orgStr
  ** roleStr ............. $roleStr
  ** remainingStr ........ $remainingStr"
        fi

        # Make it a bit more pretty if the value is empty.
        if [[ "${firstStr}" = "FIRST" ]]; then
            firstStr="<empty>"
        fi

        if [[ "${lastStr}" = "LAST" ]]; then
            lastStr="<empty>"
        fi

        if [[ "${emailStr}" = "EMAIL" ]]; then
            emailStr="<empty>"
        fi

        if [[ "${phoneStr}" = "PHONE" ]]; then
            phoneStr="<empty>"
        fi

        if [[ "${orgStr}" = "COMPANY" ]]; then
            orgStr="<empty>"
        fi

        if [[ "${roleStr}" = "ROLE" ]]; then
            roleStr="<empty>"
        fi


        if [[ $recordCount == 1 ]]; then

            # Print a banner for each file searched.
            # Makes clear the diplayed record's source.
            printf "%s\n" "=========== $progName  v$progVer ========== File: $fileBaseName =========="
        fi

        printf "%s\n" "\
  Name ............ $firstStr $lastStr
  Phone ........... $phoneStr
  email ........... $emailStr"

        if [[ ! -z $remainingStr ]]; then
            printf "%s\n" "    Note .......... $remainingStr"
        fi

        printf "%s\n" "\
    Role, Org ..... $roleStr, $orgStr
    Created ....... $recordDate                Record Ver: $recordVer"

        DashLine 65 "-"

    done
}   # function


# ----------------------------------------
# ----------------------------------------
# main Main MAIN
# ----------------------------------------
# ----------------------------------------

Initialize
readonly fileSearchList=$CONTACTSPATH

if [[ -z $1 ]]; then
    printf "%s\n
ERROR: search_name not supplied.
"
    ProgUsage
    PrintVer
    exit
else
    searchStr=$1 

    # See if a Usage message was requested, the "-h" flag
    if [[ "${searchStr}" = "-h" ]]; then
        ProgUsage
    fi
fi


#debug="TRUE"
IFS=:
for searchFileName in $fileSearchList; do

    if [ "$debug" == "TRUE" ]; then
        printf "%s\n" "\
** ==================== Main: $progName ====================
** searchFileName .................... $searchFileName
** searchStr ......................... $searchStr "
file $searchFileName
            printf "%s\n" "\
** ==================== Main ====================
"

    fi

    # If the help, "-h", flag was supplied
    if [[ "${searchStr}" = "-h" ]]; then
        # Print each file name in the env variable.
        printf "%s\n" "\
  $searchFileName"
    else
        if [[ -f "$searchFileName" ]]; then
            # No "help" flag.. Perform the search on each file.
            SearchFile "$searchFileName" "$searchStr"
        else
            printf "%s\n" "
ERROR: A file listed in the environment variable CONTACTSPATH does not exist.
       File: $searchFileName
"
        fi
   fi

done
unset IFS

PrintVer


# ----------------------------------------
# ----------------------------------------
# EXIT Exit exit
  exit	# Without this, the comment section will execute and error out.
# ----------------------------------------
# ----------------------------------------

----------------------------------------
  ToDo todo TODO
----------------------------------------

----------------------------------------
  History
----------------------------------------

------------------------------------------------------------
 Program: contact
 Date: 2023-11-06
 Version: 7.0
 Compatible with CONREC record version 4.0
------------------------------------------------------------
- Correct the logic. V6.0 quit execution if any file listed in the 
  ENV var does not exist.
  V7.0 reports the missing file and continues processing the other
  files.
- Correct other logic errors. Remove a file test in main()

------------------------------------------------------------
 Program: contact
 Date: 2021-01-16
 Version: 6.0
 Compatible with CONREC record version 4.0
------------------------------------------------------------
- Added to the help, -h, output.
  Display the files listed in the $CONTATSPATH env variable.
- If a field is the default value, then change the output to "<empty>"
  So the string "FIRST" gets changed to "<empty>". Same for LAST, 
  PHONE, EMAIL. 
  The output record formatremain constant and easier to view..

------------------------------------------------------------
 2018-06-20
 Version 5.0
 Compatible with CONREC version 4.0
------------------------------------------------------------
Major refactor. Total refactor.
- Search for the contact in a file list.
- Read file list from the CONTACTSPATH environment variable
- Remove the file_name command line option
- Check for and correct a conrec ver 3.0 record
- Display the Role information in the output
- Almost a total rewrite

------------------------------------------------------------
 2018-06-07
 Version 4.1
 Compatible with CONREC version 4.0
------------------------------------------------------------
Changed progVersion to 4.1

The records were not being displayed properly.
- Some fields were not being displayed.
- There were errors in the parsing.

Changed variable name for better clarity.
- recordID --> recordVer
- Intended to display the version of the record found.

Updated the debug output for the new variable name.

Updated the user output for the new variable name.

Added recordID to the debug output

Added roleStr to the record parsing
- Was blank in the debug output
- Was included as part of the remainingStr

Added recordCount to count the number of records found.

Added the progName variable.
- Added to debug output
- Added to user output

----------------------------------------------------------------------
 2018-04-20
 Version 4.0
 Compatible with CONREC version 4.0
----------------------------------------------------------------------
Note: There was no version 3.0 of this script. Trying to keep the record
script and this script versions in sync. Maybe it's useful?

Ver 4.0 CONREC record changed. Moved ver. Added a role.
- Change the parsing to be consistent with 4.0

 ---------------------------------------- contact  v4.1 -----
   Name ........ Rick Harper
   Phone ....... 781.997.5257
   email ....... RHarper@grgc.com
     Note ...... Boston. Gem recruiter.
     Org ....... Gardner Resources Consulting
     Created ... 2018-06-07                Record Ver: 4.0
 ------------------------------------------------------------

----------------------------------------------------------------------
 2018-04-19
 Version 2.0
 Compatible with CONREC version 3.0
----------------------------------------------------------------------
- If the file name is not supplied, use a default search file.
    Default = cPrime.txt in the cPrime directory
- Much more error checking on input parameters
- Write the ProgUsage function, a syntax description
- When there is an entry at the end of the line, treat it as a note. If the
  value is set, ouput it as a "Note" field

"contact dane" produces this output":

 ------------------------------------------------- v2.0 -----
   Name ........ Dane Jessen
   Phone ....... 509.230.2877
   email ....... dane@rainincubator.org
     Note ........ Chief Operations Officer
     Org ......... RAIN Incubator
     Created ..... 2018-04-17                CONREC 3.0
 ------------------------------------------------------------


----------------------------------------------------------------------
 2018-04-17
 Version 1.0
 Compatible with CONREC version 3.0
----------------------------------------------------------------------
"contact dane < cPrime.txt" produces this output:

 -------------------------------------------------- 1.0 -----
   Name ........ Dane Jessen
   Phone ....... 509.230.2877
   email ....... dane@rainincubator.org
     Org ......... RAIN Incubator
     Created ..... 2018-04-17                CONREC 3.0
 ------------------------------------------------------------

